!function(t){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(t,c){!function(t,n){if(!u[t]||!C[t])return;for(var c in C[t]=!1,n)Object.prototype.hasOwnProperty.call(n,c)&&(b[c]=n[c]);0==--g&&0===r&&Z()}(t,c),n&&n(t,c)};var c,e=!0,Q="2cfcebdd66b927dff4d7",l=1e4,i={},B=[],s=[];function F(t){var n=R[t];if(!n)return y;var e=function(e){return n.hot.active?(R[e]?-1===R[e].parents.indexOf(t)&&R[e].parents.push(t):(B=[t],c=e),-1===n.children.indexOf(e)&&n.children.push(e)):(console.warn("[HMR] unexpected require("+e+") from disposed module "+t),B=[]),y(e)},Q=function(t){return{configurable:!0,enumerable:!0,get:function(){return y[t]},set:function(n){y[t]=n}}};for(var l in y)Object.prototype.hasOwnProperty.call(y,l)&&"e"!==l&&"t"!==l&&Object.defineProperty(e,l,Q(l));return e.e=function(t){return"ready"===d&&a("prepare"),r++,y.e(t).then(n,function(t){throw n(),t});function n(){r--,"prepare"===d&&(x[t]||p(t),0===r&&0===g&&Z())}},e.t=function(t,n){return 1&n&&(t=e(t)),y.t(t,-2&n)},e}var I=[],d="idle";function a(t){d=t;for(var n=0;n<I.length;n++)I[n].call(null,t)}var o,b,U,g=0,r=0,x={},C={},u={};function G(t){return+t+""===t?+t:t}function X(t){if("idle"!==d)throw new Error("check() is only allowed in idle status");return e=t,a("check"),function(t){return t=t||1e4,new Promise(function(n,c){if("undefined"==typeof XMLHttpRequest)return c(new Error("No browser support"));try{var e=new XMLHttpRequest,l=y.p+""+Q+".hot-update.json";e.open("GET",l,!0),e.timeout=t,e.send(null)}catch(t){return c(t)}e.onreadystatechange=function(){if(4===e.readyState)if(0===e.status)c(new Error("Manifest request to "+l+" timed out."));else if(404===e.status)n();else if(200!==e.status&&304!==e.status)c(new Error("Manifest request to "+l+" failed."));else{try{var t=JSON.parse(e.responseText)}catch(t){return void c(t)}n(t)}}})}(l).then(function(t){if(!t)return a("idle"),null;C={},x={},u=t.c,U=t.h,a("prepare");var n=new Promise(function(t,n){o={resolve:t,reject:n}});b={};return p(0),"prepare"===d&&0===r&&0===g&&Z(),n})}function p(t){u[t]?(C[t]=!0,g++,function(t){var n=document.getElementsByTagName("head")[0],c=document.createElement("script");c.charset="utf-8",c.src=y.p+""+t+"."+Q+".hot-update.js",n.appendChild(c)}(t)):x[t]=!0}function Z(){a("ready");var t=o;if(o=null,t)if(e)Promise.resolve().then(function(){return m(e)}).then(function(n){t.resolve(n)},function(n){t.reject(n)});else{var n=[];for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&n.push(G(c));t.resolve(n)}}function m(n){if("ready"!==d)throw new Error("apply() is only allowed in ready status");var c,e,l,s,F;function I(t){for(var n=[t],c={},e=n.slice().map(function(t){return{chain:[t],id:t}});e.length>0;){var Q=e.pop(),l=Q.id,i=Q.chain;if((s=R[l])&&!s.hot._selfAccepted){if(s.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:l};if(s.hot._main)return{type:"unaccepted",chain:i,moduleId:l};for(var B=0;B<s.parents.length;B++){var F=s.parents[B],I=R[F];if(I){if(I.hot._declinedDependencies[l])return{type:"declined",chain:i.concat([F]),moduleId:l,parentId:F};-1===n.indexOf(F)&&(I.hot._acceptedDependencies[l]?(c[F]||(c[F]=[]),o(c[F],[l])):(delete c[F],n.push(F),e.push({chain:i.concat([F]),id:F})))}}}}return{type:"accepted",moduleId:t,outdatedModules:n,outdatedDependencies:c}}function o(t,n){for(var c=0;c<n.length;c++){var e=n[c];-1===t.indexOf(e)&&t.push(e)}}n=n||{};var g={},r=[],x={},C=function(){console.warn("[HMR] unexpected require("+p.moduleId+") to disposed module")};for(var X in b)if(Object.prototype.hasOwnProperty.call(b,X)){var p;F=G(X);var Z=!1,m=!1,V=!1,W="";switch((p=b[X]?I(F):{type:"disposed",moduleId:X}).chain&&(W="\nUpdate propagation: "+p.chain.join(" -> ")),p.type){case"self-declined":n.onDeclined&&n.onDeclined(p),n.ignoreDeclined||(Z=new Error("Aborted because of self decline: "+p.moduleId+W));break;case"declined":n.onDeclined&&n.onDeclined(p),n.ignoreDeclined||(Z=new Error("Aborted because of declined dependency: "+p.moduleId+" in "+p.parentId+W));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(p),n.ignoreUnaccepted||(Z=new Error("Aborted because "+F+" is not accepted"+W));break;case"accepted":n.onAccepted&&n.onAccepted(p),m=!0;break;case"disposed":n.onDisposed&&n.onDisposed(p),V=!0;break;default:throw new Error("Unexception type "+p.type)}if(Z)return a("abort"),Promise.reject(Z);if(m)for(F in x[F]=b[F],o(r,p.outdatedModules),p.outdatedDependencies)Object.prototype.hasOwnProperty.call(p.outdatedDependencies,F)&&(g[F]||(g[F]=[]),o(g[F],p.outdatedDependencies[F]));V&&(o(r,[p.moduleId]),x[F]=C)}var L,h=[];for(e=0;e<r.length;e++)F=r[e],R[F]&&R[F].hot._selfAccepted&&h.push({module:F,errorHandler:R[F].hot._selfAccepted});a("dispose"),Object.keys(u).forEach(function(t){!1===u[t]&&function(t){delete installedChunks[t]}(t)});for(var A,N,H=r.slice();H.length>0;)if(F=H.pop(),s=R[F]){var E={},k=s.hot._disposeHandlers;for(l=0;l<k.length;l++)(c=k[l])(E);for(i[F]=E,s.hot.active=!1,delete R[F],delete g[F],l=0;l<s.children.length;l++){var Y=R[s.children[l]];Y&&((L=Y.parents.indexOf(F))>=0&&Y.parents.splice(L,1))}}for(F in g)if(Object.prototype.hasOwnProperty.call(g,F)&&(s=R[F]))for(N=g[F],l=0;l<N.length;l++)A=N[l],(L=s.children.indexOf(A))>=0&&s.children.splice(L,1);for(F in a("apply"),Q=U,x)Object.prototype.hasOwnProperty.call(x,F)&&(t[F]=x[F]);var J=null;for(F in g)if(Object.prototype.hasOwnProperty.call(g,F)&&(s=R[F])){N=g[F];var D=[];for(e=0;e<N.length;e++)if(A=N[e],c=s.hot._acceptedDependencies[A]){if(-1!==D.indexOf(c))continue;D.push(c)}for(e=0;e<D.length;e++){c=D[e];try{c(N)}catch(t){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:F,dependencyId:N[e],error:t}),n.ignoreErrored||J||(J=t)}}}for(e=0;e<h.length;e++){var v=h[e];F=v.module,B=[F];try{y(F)}catch(t){if("function"==typeof v.errorHandler)try{v.errorHandler(t)}catch(c){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:F,error:c,originalError:t}),n.ignoreErrored||J||(J=c),J||(J=t)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:F,error:t}),n.ignoreErrored||J||(J=t)}}return J?(a("fail"),Promise.reject(J)):(a("idle"),new Promise(function(t){t(r)}))}var R={};function y(n){if(R[n])return R[n].exports;var e=R[n]={i:n,l:!1,exports:{},hot:function(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:c!==t,active:!0,accept:function(t,c){if(void 0===t)n._selfAccepted=!0;else if("function"==typeof t)n._selfAccepted=t;else if("object"==typeof t)for(var e=0;e<t.length;e++)n._acceptedDependencies[t[e]]=c||function(){};else n._acceptedDependencies[t]=c||function(){}},decline:function(t){if(void 0===t)n._selfDeclined=!0;else if("object"==typeof t)for(var c=0;c<t.length;c++)n._declinedDependencies[t[c]]=!0;else n._declinedDependencies[t]=!0},dispose:function(t){n._disposeHandlers.push(t)},addDisposeHandler:function(t){n._disposeHandlers.push(t)},removeDisposeHandler:function(t){var c=n._disposeHandlers.indexOf(t);c>=0&&n._disposeHandlers.splice(c,1)},check:X,apply:m,status:function(t){if(!t)return d;I.push(t)},addStatusHandler:function(t){I.push(t)},removeStatusHandler:function(t){var n=I.indexOf(t);n>=0&&I.splice(n,1)},data:i[t]};return c=void 0,n}(n),parents:(s=B,B=[],s),children:[]};return t[n].call(e.exports,e,e.exports,F(n)),e.l=!0,e.exports}y.m=t,y.c=R,y.d=function(t,n,c){y.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:c})},y.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},y.t=function(t,n){if(1&n&&(t=y(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var c=Object.create(null);if(y.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var e in t)y.d(c,e,function(n){return t[n]}.bind(null,e));return c},y.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return y.d(n,"a",n),n},y.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},y.p="",y.h=function(){return Q},F(5)(y.s=5)}([function(module,exports,__webpack_require__){eval("exports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"p {\\n  margin: 0;\\n  padding: 0; }\\n\\nli {\\n  list-style-type: none; }\\n\\ni {\\n  cursor: pointer; }\\n\\n.btn-floating:hover {\\n  background-color: #2bbbad; }\\n\\n::-webkit-scrollbar {\\n  width: 0px;\\n  /* remove scrollbar space */\\n  background: transparent;\\n  /* optional: just make scrollbar invisible */ }\\n\\n/* optional: show position indicator in red */\\n::-webkit-scrollbar-thumb {\\n  background: #FF0000; }\\n\\nh1 {\\n  margin: 0; }\\n\\nnav {\\n  background-color: #e66053; }\\n\\n#nav-mobile {\\n  text-transform: uppercase; }\\n\\n.pulse {\\n  margin: 0 auto; }\\n\\n.row .col {\\n  padding: 0;\\n  margin-right: 10px;\\n  max-width: 300px; }\\n\\n.blue-grey:hover {\\n  background-color: #6b8a99 !important; }\\n\\n#Datepickk .d-table input + label {\\n  height: 100px;\\n  border: 1px solid lightgray; }\\n\\n#Datepickk .d-tables {\\n  background-color: #F6E9DC; }\\n\\n/*Main color*/\\n/*Datepickk*/\\n.d-noscroll {\\n  overflow: hidden; }\\n\\n#Datepickk {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 999;\\n  width: 100%;\\n  height: 100%;\\n  font-family: inherit;\\n  color: #333;\\n  user-select: none; }\\n\\n#Datepickk.MSIE:not(.wrapped):not(.inline) .d-calendar {\\n  height: 560px; }\\n\\n#Datepickk.d-show .d-overlay {\\n  animation-name: show;\\n  animation-duration: .2s;\\n  animation-timing-function: ease-out;\\n  animation-fill-mode: both; }\\n\\n#Datepickk.d-hide > * {\\n  animation-name: DatepickkHide;\\n  animation-duration: .2s;\\n  animation-timing-function: linear;\\n  animation-fill-mode: both; }\\n\\n#Datepickk.d-hide .d-overlay {\\n  animation-name: show;\\n  animation-duration: .15s;\\n  animation-timing-function: ease-out;\\n  animation-fill-mode: both;\\n  animation-direction: reverse; }\\n\\n#Datepickk .d-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(55, 58, 71, 0.95);\\n  z-index: 1; }\\n\\n#Datepickk .d-title {\\n  color: white;\\n  text-align: center;\\n  position: relative;\\n  font-size: 30px;\\n  margin: 25px 0;\\n  z-index: 2; }\\n\\n#Datepickk .d-confirm {\\n  border: none;\\n  position: relative;\\n  background-color: transparent;\\n  outline: none;\\n  font-family: inherit;\\n  font-size: 30px;\\n  font-weight: 500;\\n  color: white;\\n  margin: 25px 0;\\n  cursor: pointer;\\n  padding: 0;\\n  z-index: 2; }\\n\\n#Datepickk .d-title:empty,\\n#Datepickk .d-confirm:empty {\\n  display: none; }\\n\\n@media (max-height: 528px) {\\n  #Datepickk .d-title,\\n  #Datepickk .d-confirm {\\n    font-size: 20px;\\n    margin: 15px 0; }\\n  #Datepickk .d-calendar {\\n    font-size: 20px; } }\\n\\n#Datepickk.multi .d-calendar,\\n#Datepickk.multi .d-legend {\\n  max-width: 800px; }\\n\\n#Datepickk.multi .d-table {\\n  position: relative;\\n  padding-top: 35px; }\\n\\n#Datepickk.multi .d-table:before {\\n  content: attr(data-month);\\n  text-align: right;\\n  width: 100%;\\n  font-size: 1em;\\n  padding: 5px 10px 5px 0;\\n  box-sizing: border-box;\\n  color: #CCC;\\n  position: absolute;\\n  left: 0;\\n  top: 0; }\\n\\n#Datepickk.inline.d-show .d-calendar {\\n  animation: none; }\\n\\n#Datepickk.inline,\\n#Datepickk.wrapped {\\n  position: static;\\n  z-index: 0; }\\n\\n#Datepickk.inline .d-calendar,\\n#Datepickk.wrapped .d-calendar {\\n  box-shadow: none;\\n  z-index: 0;\\n  max-width: none;\\n  max-height: none; }\\n\\n#Datepickk.inline .d-confirm,\\n#Datepickk.wrapped .d-confirm,\\n#Datepickk.inline .d-title,\\n#Datepickk.wrapped .d-title {\\n  color: #222; }\\n\\n#Datepickk.inline .d-overlay,\\n#Datepickk.wrapped .d-overlay {\\n  display: none; }\\n\\n#Datepickk.inline .d-legend,\\n#Datepickk.wrapped .d-legend {\\n  color: #222 !important;\\n  max-width: none;\\n  max-height: none; }\\n\\n#Datepickk.fullscreen .d-calendar {\\n  max-width: none;\\n  max-height: none; }\\n\\n#Datepickk.fullscreen .d-calendar input + label {\\n  outline: 1px solid #eaeaea;\\n  box-sizing: border-box;\\n  align-items: flex-start !important;\\n  justify-content: flex-end !important; }\\n\\n#Datepickk.fullscreen .d-calendar input + label text {\\n  padding: 5px 10px 0 0; }\\n\\n#Datepickk.fullscreen .d-legend {\\n  max-width: none; }\\n\\n#Datepickk .d-legend {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  width: 100%;\\n  z-index: 2;\\n  background-color: whitesmoke;\\n  max-width: 500px;\\n  position: relative;\\n  color: white; }\\n\\n#Datepickk .d-legend:empty {\\n  height: 0; }\\n\\n#Datepickk .d-legend p {\\n  backface-visibility: visible !important;\\n  animation-name: DatepickfadeInUp;\\n  animation-duration: .5s;\\n  animation-fill-mode: both;\\n  margin: 0;\\n  padding: 15px;\\n  transition: background-color 0.2s ease;\\n  cursor: pointer;\\n  color: #1B353F; }\\n\\n#Datepickk .d-legend p:after {\\n  content: attr(data-legend); }\\n\\n#Datepickk .d-legend p span {\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 100%;\\n  vertical-align: bottom;\\n  display: inline-block;\\n  margin-right: 10px; }\\n\\n#Datepickk .d-calendar {\\n  margin: 0;\\n  background-color: white;\\n  box-shadow: 0px 2px 10px -2px rgba(0, 0, 0, 0.6);\\n  font-size: 20px;\\n  width: 100%;\\n  position: relative;\\n  max-width: 500px;\\n  max-height: 560px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  flex-grow: 1;\\n  z-index: 2; }\\n\\n#Datepickk .d-header {\\n  position: relative;\\n  background-color: #1B363F;\\n  color: white;\\n  font-size: 1.5em; }\\n\\n#Datepickk .d-header p {\\n  margin: .5em 0;\\n  text-align: center; }\\n\\n#Datepickk .d-header i {\\n  position: absolute;\\n  top: 50%;\\n  width: 30px;\\n  height: 30px;\\n  cursor: pointer;\\n  text-align: center;\\n  border-radius: 100%;\\n  transition: background-color 0.2s ease;\\n  transform: translateY(-50%); }\\n\\n#Datepickk .d-header i:before,\\n#Datepickk .d-header i:after {\\n  content: '';\\n  width: 0;\\n  height: 0;\\n  position: absolute; }\\n\\n#Datepickk .d-header i:before {\\n  border-top: 10px solid rgba(0, 0, 0, 0);\\n  border-bottom: 10px solid rgba(0, 0, 0, 0); }\\n\\n#Datepickk .d-header i:after {\\n  border-top: 7px solid rgba(0, 0, 0, 0);\\n  border-bottom: 7px solid rgba(0, 0, 0, 0);\\n  transition: border-color 0.2s ease; }\\n\\n#Datepickk .d-header i#d-previous {\\n  left: 20px; }\\n\\n#Datepickk .d-header i#d-previous:before {\\n  border-right: 10px solid #FFF;\\n  top: 5px;\\n  left: 7px; }\\n\\n#Datepickk .d-header i#d-previous:after {\\n  border-right: 7px solid #1B363F;\\n  top: 8px;\\n  left: 10px; }\\n\\n#Datepickk .d-header i#d-next {\\n  right: 20px; }\\n\\n#Datepickk .d-header i#d-next:before {\\n  border-left: 10px solid #FFF;\\n  top: 5px;\\n  left: 12px; }\\n\\n#Datepickk .d-header i#d-next:after {\\n  border-left: 7px solid #1B363F;\\n  top: 8px;\\n  left: 12px; }\\n\\n#Datepickk .d-header i:hover {\\n  background-color: #5E7178; }\\n\\n#Datepickk .d-header i:hover:after {\\n  border-left-color: #5E7178 !important;\\n  border-right-color: #5E7178 !important; }\\n\\n#Datepickk .d-month {\\n  cursor: pointer;\\n  white-space: nowrap; }\\n\\n#Datepickk .d-year {\\n  margin-left: 10px;\\n  cursor: pointer; }\\n\\n#Datepickk .d-year:before {\\n  content: \\\"\\\"; }\\n\\n#Datepickk .d-month-picker {\\n  display: flex;\\n  justify-content: space-between;\\n  background-color: rgba(27, 54, 63, 0.9);\\n  height: 0;\\n  overflow: hidden;\\n  pointer-events: none;\\n  transition: height .2s ease; }\\n\\n#Datepickk .d-month-picker.d-show {\\n  height: 44px;\\n  pointer-events: auto; }\\n\\n#Datepickk .d-month-picker > div {\\n  width: calc(100% / 12);\\n  text-align: center;\\n  line-height: 44px;\\n  color: white;\\n  cursor: pointer; }\\n\\n#Datepickk .d-month-picker > div:hover,\\n#Datepickk .d-month-picker > div:focus {\\n  background-color: #e32d2d;\\n  color: white; }\\n\\n#Datepickk .d-month-picker > div.current {\\n  background-color: #e9965a;\\n  color: white; }\\n\\n#Datepickk .d-year-picker {\\n  display: flex;\\n  justify-content: space-between;\\n  background-color: rgba(27, 54, 63, 0.9);\\n  height: 0;\\n  overflow: hidden;\\n  pointer-events: none;\\n  transition: height .2s ease; }\\n\\n#Datepickk .d-year-picker.d-show {\\n  height: 44px;\\n  pointer-events: auto; }\\n\\n#Datepickk .d-year-picker > div {\\n  width: calc(100% / 11);\\n  text-align: center;\\n  line-height: 44px;\\n  color: white;\\n  cursor: pointer; }\\n\\n#Datepickk .d-year-picker > div:hover,\\n#Datepickk .d-year-picker > div:focus {\\n  background-color: #e32d2d;\\n  color: white; }\\n\\n#Datepickk .d-year-picker > div.current {\\n  background-color: #e9965a;\\n  color: white; }\\n\\n#Datepickk .d-weekdays {\\n  display: flex; }\\n\\n#Datepickk .d-week {\\n  background-color: #E95A5A;\\n  color: white;\\n  display: flex;\\n  width: 100%; }\\n\\n#Datepickk .d-week + .d-week {\\n  border-left: 1px solid rgba(255, 255, 255, 0.05); }\\n\\n#Datepickk .d-week > div {\\n  flex-basis: calc(100% / 7);\\n  text-align: center; }\\n\\n#Datepickk .d-week > div p {\\n  margin: .8em 0; }\\n\\n@media (max-height: 540px) {\\n  #Datepickk .d-week {\\n    display: none; } }\\n\\n#Datepickk .d-table {\\n  width: 100%;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex: 1; }\\n\\n#Datepickk .d-table:first-child:nth-last-child(n + 3),\\n#Datepickk .d-table:first-child:nth-last-child(n + 3) ~ div {\\n  flex: 0;\\n  flex-basis: calc(100% / 3 - 1px);\\n  /*-1px due to browser render*/\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05); }\\n\\n#Datepickk .d-table label:nth-of-type(7n) .d-date-legends {\\n  padding-right: 0; }\\n\\n#Datepickk .d-table label:nth-last-of-type(-n + 7) .d-date-legends {\\n  padding-bottom: 0; }\\n\\n#Datepickk .d-table input {\\n  display: none; }\\n\\n#Datepickk .d-table input + label {\\n  flex-basis: calc(100% / 7);\\n  -ms-flex-preferred-size: 14.28%;\\n  /*Keep -> IE render fail*/\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  transition: background-color 0.2s ease, background 0.2s ease, color 0.2s ease;\\n  position: relative;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  box-sizing: border-box; }\\n\\n#Datepickk .d-table input + label text {\\n  z-index: 9;\\n  pointer-events: none;\\n  position: relative; }\\n\\n#Datepickk .d-table input + label[style*=\\\"linear-gradient\\\"] text {\\n  text-shadow: 0 0 20px black; }\\n\\n#Datepickk .d-table input + label.today text:before {\\n  content: '';\\n  width: 100%;\\n  height: 2px;\\n  background-color: #E95A5A;\\n  position: absolute;\\n  bottom: -5px;\\n  left: 0; }\\n\\n#Datepickk .d-table input + label:before {\\n  content: '';\\n  position: absolute;\\n  top: 12.5%;\\n  left: 12.5%;\\n  width: 75%;\\n  height: 75%;\\n  border-radius: 5px;\\n  background-color: #7DD076;\\n  transition: transform 0.1s ease-out;\\n  transform: scaleX(0);\\n  transform-origin: left; }\\n\\n#Datepickk .d-table input + label.legend-hover {\\n  animation: legendhover 1s infinite;\\n  z-index: 10; }\\n\\n@keyframes legendhover {\\n  0% {\\n    transform: translate(0, 0px); }\\n  50% {\\n    transform: translate(0, -5px); }\\n  100% {\\n    transform: translate(0, 0px); } }\\n\\n#Datepickk .d-table input + label.next,\\n#Datepickk .d-table input + label.prev {\\n  color: #ccc; }\\n\\n#Datepickk .d-table input + label [data-tooltip]:after {\\n  content: '';\\n  border-radius: 100%;\\n  background-color: #1B363F;\\n  width: 5px;\\n  height: 5px;\\n  position: absolute;\\n  top: 0;\\n  right: -10px; }\\n\\n#Datepickk .d-table input + label .d-tooltip {\\n  position: absolute;\\n  background-color: #1B363F;\\n  color: #FFF;\\n  padding: 7px;\\n  font-size: .7em;\\n  z-index: 13;\\n  text-align: center;\\n  top: 100%;\\n  left: 50%;\\n  transform: translate(-50%, -5px);\\n  display: none; }\\n\\n#Datepickk .d-table input + label .d-tooltip:before {\\n  content: '';\\n  border-bottom: 7px solid #1B363F;\\n  border-left: 5px solid rgba(0, 0, 0, 0);\\n  border-right: 5px solid rgba(0, 0, 0, 0);\\n  top: -7px;\\n  left: 50%;\\n  position: absolute;\\n  margin-left: -5px; }\\n\\n#Datepickk .d-table input + label .d-tooltip:empty {\\n  display: none !important; }\\n\\n#Datepickk .d-table input + label:hover .d-tooltip {\\n  display: block; }\\n\\n#Datepickk .d-table input:checked + label {\\n  color: white; }\\n\\n#Datepickk .d-table input:checked + label:before {\\n  transform: scaleX(1); }\\n\\n#Datepickk .d-table input:disabled + label {\\n  cursor: not-allowed; }\\n\\n#Datepickk .d-table input:disabled + label:after {\\n  content: '';\\n  position: absolute;\\n  top: 50%;\\n  left: 20%;\\n  width: 60%;\\n  height: 2px;\\n  z-index: 10;\\n  background-color: #c60000;\\n  transform-origin: center;\\n  transform: rotate(-25deg); }\\n\\n#Datepickk .d-table input + label.d-hidden {\\n  cursor: default;\\n  color: #ccc !important;\\n  background: #f0f0f0 !important;\\n  text-decoration: line-through; }\\n\\n#Datepickk .d-table input + label.d-hidden:after {\\n  content: none; }\\n\\n#Datepickk .d-tables {\\n  display: flex;\\n  flex: 1;\\n  flex-wrap: wrap; }\\n\\n#Datepickk .d-tables:not(.locked) input:not(:checked) + label:not(.hidden):hover {\\n  color: #222;\\n  background-color: #eaeaea; }\\n\\n#Datepickk .d-tables.locked label {\\n  cursor: default; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked + label {\\n  color: white; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked + label ~ label:not(.hidden) {\\n  color: white; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked + label ~ label:not(.hidden):before {\\n  transform: scaleX(1);\\n  background-color: rgba(125, 208, 118, 0.5); }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:hover ~ label,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:focus ~ label {\\n  color: #666; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:hover ~ label:before,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:focus ~ label:before {\\n  transform: scaleX(0); }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:hover ~ label.next,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:focus ~ label.next,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:hover ~ label.prev,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ label:focus ~ label.prev {\\n  color: #ccc; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label {\\n  color: white; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label:before {\\n  transform: scaleX(1);\\n  background-color: #7DD076; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label ~ label {\\n  color: inherit; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label ~ label.next,\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label ~ label.prev {\\n  color: #ccc; }\\n\\n#Datepickk .d-tables.range:not(.before) input:not(.single):checked ~ input:checked + label ~ label:before {\\n  transform: scaleX(0); }\\n\\n#Datepickk .d-tables.range.before input:not(.single):not(:checked) + label {\\n  color: white; }\\n\\n#Datepickk .d-tables.range.before input:not(.single):not(:checked) + label:before {\\n  transform: scaleX(1);\\n  background-color: rgba(233, 90, 126, 0.3); }\\n\\n#Datepickk .d-tables.range.before input:not(.single):checked + label ~ label {\\n  color: inherit; }\\n\\n#Datepickk .d-tables.range.before input:not(.single):checked + label ~ label.next,\\n#Datepickk .d-tables.range.before input:not(.single):checked + label ~ label.prev {\\n  color: #ccc; }\\n\\n#Datepickk .d-tables.range.before input:not(.single):checked + label ~ label:before {\\n  transform: scaleX(0); }\\n\\n#Datepickk .d-fadeInUp {\\n  backface-visibility: visible !important;\\n  animation-name: DatepickfadeInUp;\\n  animation-duration: .5s;\\n  animation-fill-mode: both; }\\n\\n@keyframes DatepickBGShow {\\n  from {\\n    opacity: 0; } }\\n\\n@keyframes DatepickfadeInUp {\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(0, 100%, 0); }\\n  100% {\\n    opacity: 1;\\n    transform: none; } }\\n\\n.d-fadeInUp {\\n  animation-name: DatepickfadeInUp; }\\n\\n#Datepickk.d-show > * {\\n  animation-name: DatepickkShow;\\n  animation-duration: .2s;\\n  animation-timing-function: ease-out;\\n  animation-fill-mode: both; }\\n\\n@keyframes DatepickkShow {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50px); } }\\n\\n@keyframes DatepickkHide {\\n  to {\\n    opacity: 0;\\n    transform: translateY(50px); } }\\n\\nbody {\\n  min-height: 100vh;\\n  margin: 0;\\n  padding: 0;\\n  background: slategrey;\\n  color: #212121;\\n  overflow: scroll !important; }\\n  body #outlet {\\n    background-color: slategrey; }\\n    body #outlet .board {\\n      background: slategrey;\\n      min-height: 100vh; }\\n      body #outlet .board .col {\\n        min-height: 500px;\\n        max-height: 500px;\\n        overflow-y: scroll;\\n        background-color: #F6E9DC;\\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\\n        border-radius: 6px;\\n        margin: 25px 0px;\\n        margin-right: 10px; }\\n        body #outlet .board .col header {\\n          background: #26a69a;\\n          padding: 10px;\\n          position: relative;\\n          border-radius: 6px 6px 0 0;\\n          min-height: 110px;\\n          box-shadow: 0px 2px 4px rgba(44, 62, 80, 0.15); }\\n          body #outlet .board .col header h5 {\\n            position: relative;\\n            color: darkslategray;\\n            margin: 0;\\n            margin-bottom: 10px; }\\n            body #outlet .board .col header h5 i {\\n              position: absolute;\\n              right: 0;\\n              cursor: pointer; }\\n              body #outlet .board .col header h5 i:hover {\\n                color: #d14a4a !important; }\\n        body #outlet .board .col ul {\\n          margin: 0;\\n          padding: 10px;\\n          max-width: 100%; }\\n          body #outlet .board .col ul li {\\n            position: relative;\\n            text-align: justify;\\n            border-radius: 3px;\\n            margin-top: 5px;\\n            cursor: move;\\n            box-shadow: 0px 1px 2px rgba(44, 62, 80, 0.1);\\n            background-color: #FFF;\\n            border-bottom: 1px solid #CCC;\\n            padding: 6px 8px;\\n            cursor: move; }\\n            body #outlet .board .col ul li img {\\n              cursor: pointer; }\\n            body #outlet .board .col ul li p {\\n              display: block;\\n              min-height: 21px; }\\n              body #outlet .board .col ul li p:last-child {\\n                text-align: right; }\\n            body #outlet .board .col ul li .date {\\n              font-size: .7rem;\\n              font-style: italic;\\n              text-align: right; }\\n            body #outlet .board .col ul li span {\\n              position: absolute;\\n              right: 0;\\n              top: 0; }\\n              body #outlet .board .col ul li span i:hover {\\n                color: #d65f5f !important; }\\n            body #outlet .board .col ul li a {\\n              margin-top: 10px; }\\n      body #outlet .board .new-section {\\n        border: none;\\n        border: 1.5px dashed #212121;\\n        border-radius: 10px; }\\n        body #outlet .board .new-section span {\\n          color: var(#26a69a);\\n          opacity: .5;\\n          font-size: 80px;\\n          cursor: pointer;\\n          transition: all .5s; }\\n          body #outlet .board .new-section span:hover {\\n            opacity: .8; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(0);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(3)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(true) {\n\tmodule.hot.accept(0, function() {\n\t\tvar newContent = __webpack_require__(0);\n\n\t\tif(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwLnNjc3M/OTRhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLENBQTRGOztBQUVsSCw0Q0FBNEMsUUFBUzs7QUFFckQ7QUFDQTs7OztBQUlBLGVBQWU7O0FBRWY7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsQ0FBZ0Q7O0FBRXJFOztBQUVBLEdBQUcsSUFBVTtBQUNiLG1CQUFtQixDQUE0RjtBQUMvRyxtQkFBbUIsbUJBQU8sQ0FBQyxDQUE0Rjs7QUFFdkgsb0RBQW9ELFFBQVM7O0FBRTdEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0EsRUFBRTs7QUFFRixnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hcHAuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9hcHAuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vYXBwLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media " + item[2] + "{" + content + "}";\n      } else {\n        return content;\n      }\n    }).join("");\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === "string") modules = [[null, modules, ""]];\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n      if (typeof id === "number") alreadyImportedModules[id] = true;\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      //  when a module is imported multiple times with different media queries.\n      //  I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n  return \'/*# \' + data + \' */\';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MjM1MCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidXNlU291cmNlTWFwIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJpZCIsInB1c2giLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJ0b0NvbW1lbnQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUlBO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTQyxZQUFULEVBQXVCO0FBQ3ZDLE1BQUlDLElBQUksR0FBRyxFQUFYLENBRHVDLENBR3ZDOztBQUNBQSxNQUFJLENBQUNDLFFBQUwsR0FBZ0IsU0FBU0EsUUFBVCxHQUFvQjtBQUNuQyxXQUFPLEtBQUtDLEdBQUwsQ0FBUyxVQUFVQyxJQUFWLEVBQWdCO0FBQy9CLFVBQUlDLE9BQU8sR0FBR0Msc0JBQXNCLENBQUNGLElBQUQsRUFBT0osWUFBUCxDQUFwQzs7QUFDQSxVQUFHSSxJQUFJLENBQUMsQ0FBRCxDQUFQLEVBQVk7QUFDWCxlQUFPLFlBQVlBLElBQUksQ0FBQyxDQUFELENBQWhCLEdBQXNCLEdBQXRCLEdBQTRCQyxPQUE1QixHQUFzQyxHQUE3QztBQUNBLE9BRkQsTUFFTztBQUNOLGVBQU9BLE9BQVA7QUFDQTtBQUNELEtBUE0sRUFPSkUsSUFQSSxDQU9DLEVBUEQsQ0FBUDtBQVFBLEdBVEQsQ0FKdUMsQ0FldkM7OztBQUNBTixNQUFJLENBQUNPLENBQUwsR0FBUyxVQUFTQyxPQUFULEVBQWtCQyxVQUFsQixFQUE4QjtBQUN0QyxRQUFHLE9BQU9ELE9BQVAsS0FBbUIsUUFBdEIsRUFDQ0EsT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFELEVBQU9BLE9BQVAsRUFBZ0IsRUFBaEIsQ0FBRCxDQUFWO0FBQ0QsUUFBSUUsc0JBQXNCLEdBQUcsRUFBN0I7O0FBQ0EsU0FBSSxJQUFJSCxDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLEdBQUcsS0FBS0ksTUFBeEIsRUFBZ0NKLENBQUMsRUFBakMsRUFBcUM7QUFDcEMsVUFBSUssRUFBRSxHQUFHLEtBQUtMLENBQUwsRUFBUSxDQUFSLENBQVQ7QUFDQSxVQUFHLE9BQU9LLEVBQVAsS0FBYyxRQUFqQixFQUNDRixzQkFBc0IsQ0FBQ0UsRUFBRCxDQUF0QixHQUE2QixJQUE3QjtBQUNEOztBQUNELFNBQUlMLENBQUMsR0FBRyxDQUFSLEVBQVdBLENBQUMsR0FBR0MsT0FBTyxDQUFDRyxNQUF2QixFQUErQkosQ0FBQyxFQUFoQyxFQUFvQztBQUNuQyxVQUFJSixJQUFJLEdBQUdLLE9BQU8sQ0FBQ0QsQ0FBRCxDQUFsQixDQURtQyxDQUVuQztBQUNBO0FBQ0E7QUFDQTs7QUFDQSxVQUFHLE9BQU9KLElBQUksQ0FBQyxDQUFELENBQVgsS0FBbUIsUUFBbkIsSUFBK0IsQ0FBQ08sc0JBQXNCLENBQUNQLElBQUksQ0FBQyxDQUFELENBQUwsQ0FBekQsRUFBb0U7QUFDbkUsWUFBR00sVUFBVSxJQUFJLENBQUNOLElBQUksQ0FBQyxDQUFELENBQXRCLEVBQTJCO0FBQzFCQSxjQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVVNLFVBQVY7QUFDQSxTQUZELE1BRU8sSUFBR0EsVUFBSCxFQUFlO0FBQ3JCTixjQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVUsTUFBTUEsSUFBSSxDQUFDLENBQUQsQ0FBVixHQUFnQixTQUFoQixHQUE0Qk0sVUFBNUIsR0FBeUMsR0FBbkQ7QUFDQTs7QUFDRFQsWUFBSSxDQUFDYSxJQUFMLENBQVVWLElBQVY7QUFDQTtBQUNEO0FBQ0QsR0F4QkQ7O0FBeUJBLFNBQU9ILElBQVA7QUFDQSxDQTFDRDs7QUE0Q0EsU0FBU0ssc0JBQVQsQ0FBZ0NGLElBQWhDLEVBQXNDSixZQUF0QyxFQUFvRDtBQUNuRCxNQUFJSyxPQUFPLEdBQUdELElBQUksQ0FBQyxDQUFELENBQUosSUFBVyxFQUF6QjtBQUNBLE1BQUlXLFVBQVUsR0FBR1gsSUFBSSxDQUFDLENBQUQsQ0FBckI7O0FBQ0EsTUFBSSxDQUFDVyxVQUFMLEVBQWlCO0FBQ2hCLFdBQU9WLE9BQVA7QUFDQTs7QUFFRCxNQUFJTCxZQUFZLElBQUksT0FBT2dCLElBQVAsS0FBZ0IsVUFBcEMsRUFBZ0Q7QUFDL0MsUUFBSUMsYUFBYSxHQUFHQyxTQUFTLENBQUNILFVBQUQsQ0FBN0I7QUFDQSxRQUFJSSxVQUFVLEdBQUdKLFVBQVUsQ0FBQ0ssT0FBWCxDQUFtQmpCLEdBQW5CLENBQXVCLFVBQVVrQixNQUFWLEVBQWtCO0FBQ3pELGFBQU8sbUJBQW1CTixVQUFVLENBQUNPLFVBQTlCLEdBQTJDRCxNQUEzQyxHQUFvRCxLQUEzRDtBQUNBLEtBRmdCLENBQWpCO0FBSUEsV0FBTyxDQUFDaEIsT0FBRCxFQUFVa0IsTUFBVixDQUFpQkosVUFBakIsRUFBNkJJLE1BQTdCLENBQW9DLENBQUNOLGFBQUQsQ0FBcEMsRUFBcURWLElBQXJELENBQTBELElBQTFELENBQVA7QUFDQTs7QUFFRCxTQUFPLENBQUNGLE9BQUQsRUFBVUUsSUFBVixDQUFlLElBQWYsQ0FBUDtBQUNBLEMsQ0FFRDs7O0FBQ0EsU0FBU1csU0FBVCxDQUFtQk0sU0FBbkIsRUFBOEI7QUFDN0I7QUFDQSxNQUFJQyxNQUFNLEdBQUdULElBQUksQ0FBQ1UsUUFBUSxDQUFDQyxrQkFBa0IsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFMLENBQWVMLFNBQWYsQ0FBRCxDQUFuQixDQUFULENBQWpCO0FBQ0EsTUFBSU0sSUFBSSxHQUFHLGlFQUFpRUwsTUFBNUU7QUFFQSxTQUFPLFNBQVNLLElBQVQsR0FBZ0IsS0FBdkI7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(4);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === \'function\'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  } // blank or null?\n\n\n  if (!css || typeof css !== "string") {\n    return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/"); // convert each url(...)\n\n  /*\n  This regular expression is just a way to recursively match brackets within\n  a string.\n  \t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n     (  = Start a capturing group\n       (?:  = Start a non-capturing group\n           [^)(]  = Match anything that isn\'t a parentheses\n           |  = OR\n           \\(  = Match a start parentheses\n               (?:  = Start another non-capturing groups\n                   [^)(]+  = Match anything that isn\'t a parentheses\n                   |  = OR\n                   \\(  = Match a start parentheses\n                       [^)(]*  = Match anything that isn\'t a parentheses\n                   \\)  = Match a end parentheses\n               )  = End Group\n               *\\) = Match anything and then a close parens\n           )  = Close non-capturing group\n           *  = Match anything\n        )  = Close capturing group\n   \\)  = Match a close parens\n  \t /gi  = Get all matches, not the first.  Be case insensitive.\n   */\n\n  var fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (fullMatch, origUrl) {\n    // strip quotes (if they exist)\n    var unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function (o, $1) {\n      return $1;\n    }).replace(/^\'(.*)\'$/, function (o, $1) {\n      return $1;\n    }); // already a full url? no change\n\n    if (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n      return fullMatch;\n    } // convert the url to a full url\n\n\n    var newUrl;\n\n    if (unquotedOrigUrl.indexOf("//") === 0) {\n      //TODO: should we add protocol?\n      newUrl = unquotedOrigUrl;\n    } else if (unquotedOrigUrl.indexOf("/") === 0) {\n      // path should be relative to the base url\n      newUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n    } else {\n      // path should be relative to current directory\n      newUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n    } // send back the fixed url(...)\n\n\n    return "url(" + JSON.stringify(newUrl) + ")";\n  }); // send back the fixed css\n\n  return fixedCss;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzP2Y2ZDMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNzcyIsImxvY2F0aW9uIiwid2luZG93IiwiRXJyb3IiLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwicmVwbGFjZSIsImZpeGVkQ3NzIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsInVucXVvdGVkT3JpZ1VybCIsInRyaW0iLCJvIiwiJDEiLCJ0ZXN0IiwibmV3VXJsIiwiaW5kZXhPZiIsIkpTT04iLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUNBOzs7Ozs7Ozs7Ozs7QUFhQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLEdBQVYsRUFBZTtBQUM5QjtBQUNBLE1BQUlDLFFBQVEsR0FBRyxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLElBQWlDQSxNQUFNLENBQUNELFFBQXZEOztBQUVBLE1BQUksQ0FBQ0EsUUFBTCxFQUFlO0FBQ2IsVUFBTSxJQUFJRSxLQUFKLENBQVUsa0NBQVYsQ0FBTjtBQUNELEdBTjZCLENBUS9COzs7QUFDQSxNQUFJLENBQUNILEdBQUQsSUFBUSxPQUFPQSxHQUFQLEtBQWUsUUFBM0IsRUFBcUM7QUFDbkMsV0FBT0EsR0FBUDtBQUNBOztBQUVELE1BQUlJLE9BQU8sR0FBR0gsUUFBUSxDQUFDSSxRQUFULEdBQW9CLElBQXBCLEdBQTJCSixRQUFRLENBQUNLLElBQWxEO0FBQ0EsTUFBSUMsVUFBVSxHQUFHSCxPQUFPLEdBQUdILFFBQVEsQ0FBQ08sUUFBVCxDQUFrQkMsT0FBbEIsQ0FBMEIsV0FBMUIsRUFBdUMsR0FBdkMsQ0FBM0IsQ0FkOEIsQ0FnQi9COztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkEsTUFBSUMsUUFBUSxHQUFHVixHQUFHLENBQUNTLE9BQUosQ0FBWSxxREFBWixFQUFtRSxVQUFTRSxTQUFULEVBQW9CQyxPQUFwQixFQUE2QjtBQUM5RztBQUNBLFFBQUlDLGVBQWUsR0FBR0QsT0FBTyxDQUMzQkUsSUFEb0IsR0FFcEJMLE9BRm9CLENBRVosVUFGWSxFQUVBLFVBQVNNLENBQVQsRUFBWUMsRUFBWixFQUFlO0FBQUUsYUFBT0EsRUFBUDtBQUFZLEtBRjdCLEVBR3BCUCxPQUhvQixDQUdaLFVBSFksRUFHQSxVQUFTTSxDQUFULEVBQVlDLEVBQVosRUFBZTtBQUFFLGFBQU9BLEVBQVA7QUFBWSxLQUg3QixDQUF0QixDQUY4RyxDQU85Rzs7QUFDQSxRQUFJLG9EQUFvREMsSUFBcEQsQ0FBeURKLGVBQXpELENBQUosRUFBK0U7QUFDN0UsYUFBT0YsU0FBUDtBQUNELEtBVjZHLENBWTlHOzs7QUFDQSxRQUFJTyxNQUFKOztBQUVBLFFBQUlMLGVBQWUsQ0FBQ00sT0FBaEIsQ0FBd0IsSUFBeEIsTUFBa0MsQ0FBdEMsRUFBeUM7QUFDdEM7QUFDRkQsWUFBTSxHQUFHTCxlQUFUO0FBQ0EsS0FIRCxNQUdPLElBQUlBLGVBQWUsQ0FBQ00sT0FBaEIsQ0FBd0IsR0FBeEIsTUFBaUMsQ0FBckMsRUFBd0M7QUFDOUM7QUFDQUQsWUFBTSxHQUFHZCxPQUFPLEdBQUdTLGVBQW5CLENBRjhDLENBRVY7QUFDcEMsS0FITSxNQUdBO0FBQ047QUFDQUssWUFBTSxHQUFHWCxVQUFVLEdBQUdNLGVBQWUsQ0FBQ0osT0FBaEIsQ0FBd0IsT0FBeEIsRUFBaUMsRUFBakMsQ0FBdEIsQ0FGTSxDQUVzRDtBQUM1RCxLQXhCNkcsQ0EwQjlHOzs7QUFDQSxXQUFPLFNBQVNXLElBQUksQ0FBQ0MsU0FBTCxDQUFlSCxNQUFmLENBQVQsR0FBa0MsR0FBekM7QUFDQSxHQTVCYyxDQUFmLENBMUMrQixDQXdFL0I7O0FBQ0EsU0FBT1IsUUFBUDtBQUNBLENBMUVEIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/framework/utils/index.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nvar observe = function observe(obj, cb) {\n  var validator = {\n    get: function get(target, key) {\n      if (_typeof(target[key]) === \'object\' && target[key] !== null) {\n        return new Proxy(target[key], validator);\n      }\n\n      return target[key];\n    },\n    set: function set(target, key, value) {\n      if (target[key] !== value) {\n        Reflect.set(target, key, value);\n        cb && cb.apply(void 0, arguments);\n      }\n\n      return true;\n    }\n  };\n  return new Proxy(obj, validator);\n};\nvar generateId = function generateId(n) {\n  return Math.floor(Math.random() * Math.pow(16, n)).toString(16);\n};\n// CONCATENATED MODULE: ./src/framework/Component.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar Component_Component =\n/*#__PURE__*/\nfunction () {\n  function Component() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Component);\n\n    _defineProperty(this, "eventMap", {});\n\n    _defineProperty(this, "onComponentMount", function () {});\n\n    _defineProperty(this, "onComponentUpdate", function () {});\n\n    _defineProperty(this, "onComponentDestroy", function () {});\n\n    this.update = this.update.bind(this);\n    this.clearRoot = this.clearRoot.bind(this);\n    /* create observable from passed data argument. Set this.update as a callback fn to observe any data update. Assign it to \'this.model\' attribute */\n\n    this.model = observe(data, this.update);\n    /* set isMounted flag to false, since there is no HTML representation of this view yet, just an object */\n\n    this.isMounted = false;\n    /* create container HTML element that will contain rendered view */\n\n    this.containerElement = document.createElement(\'div\');\n    /* generate random ID and set it to this.id */\n\n    this.id = generateId(6);\n    /* set HTML id to container HTML element */\n\n    this.containerElement.id = "view_".concat(this.id);\n    this.containerElement.setAttribute(\'class\', \'container\');\n  }\n  /**\r\n   * @param {*} root - Root HTML element to contain view representation.\r\n   */\n\n\n  _createClass(Component, [{\n    key: "mountTo",\n    value: function mountTo(root) {\n      this.rootElement = root;\n      this.clearRoot();\n      this.update();\n      !this.isMounted && this.attachEvents();\n      this.rootElement.appendChild(this.containerElement);\n      this.isMounted = true;\n      this.onComponentMount();\n    }\n    /**\r\n     * \'eventName @@ elementQuery\': callbackFn\r\n     */\n\n  }, {\n    key: "render",\n    value: function render() {\n      return \'\';\n    }\n  }, {\n    key: "attachEvents",\n    value: function attachEvents() {\n      var _this = this;\n\n      var _loop = function _loop(key) {\n        var _key$split = key.split(\' @@ \'),\n            _key$split2 = _slicedToArray(_key$split, 2),\n            eventName = _key$split2[0],\n            query = _key$split2[1];\n\n        _this.containerElement.addEventListener(eventName, function (event) {\n          if (Array.from(document.querySelectorAll(query)).includes(event.target)) {\n            _this.eventMap[key](event);\n          }\n        });\n      };\n\n      for (var key in this.eventMap) {\n        _loop(key);\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      this.containerElement.innerHTML = this.render();\n      this.isMounted && this.onComponentUpdate();\n    }\n  }, {\n    key: "clearRoot",\n    value: function clearRoot() {\n      if (this.rootElement) {\n        while (this.rootElement.firstChild) {\n          this.rootElement.removeChild(this.rootElement.firstChild);\n        }\n      }\n    }\n  }, {\n    key: "unmount",\n    value: function unmount() {\n      var _this2 = this;\n\n      var _loop2 = function _loop2(key) {\n        var _key$split3 = key.split(\' @@ \'),\n            _key$split4 = _slicedToArray(_key$split3, 2),\n            eventName = _key$split4[0],\n            query = _key$split4[1];\n\n        _this2.containerElement.removeEventListener(eventName, function (event) {\n          if (event.target === document.querySelector(query)) {\n            _this2.eventMap[key](event);\n          }\n        });\n      };\n\n      for (var key in this.eventMap) {\n        _loop2(key);\n      }\n\n      this.clearRoot();\n      this.isMounted = false;\n      this.onComponentDestroy();\n    }\n  }]);\n\n  return Component;\n}();\n\n\n// CONCATENATED MODULE: ./src/framework/eventBus.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction eventBus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eventBus_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eventBus_createClass(Constructor, protoProps, staticProps) { if (protoProps) eventBus_defineProperties(Constructor.prototype, protoProps); if (staticProps) eventBus_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar instance;\n\nvar EventBus =\n/*#__PURE__*/\nfunction () {\n  function EventBus() {\n    eventBus_classCallCheck(this, EventBus);\n\n    if (instance) return instance;\n    this.events = new Map();\n    /* this.events = {\r\n      someEvent: [ () => {}, () => {} ]\r\n    };\r\n    */\n\n    instance = this;\n  }\n\n  eventBus_createClass(EventBus, [{\n    key: "publish",\n    value: function publish(eventName, data) {\n      var handlers = this.events.get(eventName);\n      console.log("EVENTBUS: publishing event \\"".concat(eventName, "\\" with data ").concat(JSON.stringify(data)));\n      handlers.forEach(function (handler) {\n        handler(data);\n      });\n    }\n  }, {\n    key: "subscribe",\n    value: function subscribe(eventName, callback) {\n      var handlers = this.events.get(eventName) || [];\n      this.events.set(eventName, _toConsumableArray(handlers).concat([callback]));\n    }\n  }, {\n    key: "unsubscribe",\n    value: function unsubscribe(eventName) {\n      this.events.set(eventName, null);\n    }\n  }]);\n\n  return EventBus;\n}();\n\n\n// CONCATENATED MODULE: ./src/framework/router.js\nfunction router_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Router = function Router(routes) {\n  router_classCallCheck(this, Router);\n\n  console.log(window.location.hash);\n  window.addEventListener(\'hashchange\', function () {\n    var hash = window.location.hash;\n    routes[hash] && routes[hash]();\n  });\n};\n\n\n// CONCATENATED MODULE: ./src/framework/template.js\nfunction template(strings) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return strings.reduce(function (acc, str, i) {\n    return acc + str + (args[i] ? args[i] : \'\');\n  }, \'\');\n}\n// CONCATENATED MODULE: ./src/framework/index.js\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/api.js\nvar rootUrl = \'http://localhost:5000/api\';\nvar getColumns = function getColumns() {\n  return fetch("".concat(rootUrl, "/columns"), {\n    method: \'GET\'\n  }).then(function (response) {\n    console.log(response);\n    return response.json();\n  });\n};\nvar createColumn = function createColumn(columnData) {\n  return fetch("".concat(rootUrl, "/columns"), {\n    method: \'POST\',\n    headers: {\n      \'Accept\': \'application/json\',\n      \'Content-Type\': \'application/json\'\n    },\n    body: JSON.stringify(columnData)\n  }).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    } else {\n      throw new Error(\'something wrong with server\');\n    }\n  });\n};\nvar removeColumn = function removeColumn(columnId) {\n  return fetch("".concat(rootUrl, "/columns/").concat(columnId), {\n    method: \'DELETE\'\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      throw new Error(\'something wrong with server\');\n    }\n  });\n};\nvar createPost = function createPost(postData, columnId) {\n  return fetch("".concat(rootUrl, "/columns/").concat(columnId), {\n    method: \'POST\',\n    headers: {\n      \'Accept\': \'application/json\',\n      \'Content-Type\': \'application/json\'\n    },\n    body: JSON.stringify(postData)\n  }).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    } else {\n      throw new Error(\'something wrong with server\');\n    }\n  });\n};\nvar removePost = function removePost(currentPostId, currentColumnId) {\n  // console.log(postId, columnId);\n  return fetch("".concat(rootUrl, "/columns/").concat(currentColumnId, "/posts/").concat(currentPostId), {\n    method: \'DELETE\'\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      throw new Error(\'something wrong with server\');\n    }\n  });\n};\nvar updatePost = function updatePost(postData, currentColumnId) {\n  console.log(postData, currentColumnId);\n  return fetch("".concat(rootUrl, "/columns/").concat(currentColumnId, "/posts/").concat(postData.id), {\n    method: \'PUT\',\n    headers: {\n      \'Accept\': \'application/json\',\n      \'Content-Type\': \'application/json\'\n    },\n    body: JSON.stringify(postData)\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      throw new Error(\'something wrong with server\');\n    }\n  });\n};\n// EXTERNAL MODULE: ./src/app.scss\nvar app = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/views/Calendar.js\nfunction Calendar_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Calendar_typeof = function _typeof(obj) { return typeof obj; }; } else { Calendar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Calendar_typeof(obj); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral(["\\n      <div>\\n        <div id=\\"datepicker\\"></div>\\n            \\n            ", "\\n\\n      </div>\\n    "]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction Calendar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Calendar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Calendar_createClass(Constructor, protoProps, staticProps) { if (protoProps) Calendar_defineProperties(Constructor.prototype, protoProps); if (staticProps) Calendar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (Calendar_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Calendar_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n //import Datepickk from \'../../node_modules/datepickk/dist/datepickk\';\n\nvar Calendar_Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(data) {\n    var _this;\n\n    Calendar_classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, data));\n\n    Calendar_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onComponentMount", function () {\n      console.log(\'calendar is mounted now!\');\n    });\n\n    _this.datepicker = new Datepickk();\n    _this.datepicker.container = document.querySelector(\'#datepicker\');\n    _this.datepicker.inline = true;\n    _this.datepicker.range = true;\n    _this.datepicker.weekStart = 1;\n    return _this;\n  }\n\n  Calendar_createClass(Calendar, [{\n    key: "render",\n    value: function render() {\n      return template(_templateObject(), this.datepicker.show());\n    }\n  }]);\n\n  return Calendar;\n}(Component_Component);\n\n\n// CONCATENATED MODULE: ./src/views/Board.js\nfunction Board_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Board_typeof = function _typeof(obj) { return typeof obj; }; } else { Board_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Board_typeof(obj); }\n\nfunction _templateObject3() {\n  var data = Board_taggedTemplateLiteral(["\\n    <div class=\\"board row\\">\\n      ", "\\n      <section class=\\"new-section col s12 m4 l4 valign-wrapper\\" >\\n        <a class=\\"btn-floating pulse center-align\\"><i class=\\"material-icons\\">add</i></a>\\n      </section>\\n\\n      <div class=\\"modal\\">\\n        <div class=\\"modal-content\\">\\n          <h4></h4>\\n\\n          <div class=\\"input-field\\">\\n              <input id=\\"title\\" type=\\"text\\" class=\\"validate valid\\" required=\\"\\" data-length=\\"80\\">\\n              <label for=\\"title\\" class=\\"\\">Header</label>\\n          </div>\\n\\n          <div class=\\"input-field\\">\\n              <textarea id=\\"text\\" class=\\"materialize-textarea\\" data-length=\\"1000\\" style=\\"height: 45px;\\"></textarea>\\n              <label for=\\"text\\" class=\\"\\">Description</label>\\n          </div>\\n          </div>\\n        <div class=\\"modal-footer\\">\\n            <a class=\\"waves-effect waves-light btn\\" id=\\"buttonCreatePost\\"></a>\\n        </div>\\n      </div>\\n    </div>\\n  "]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = Board_taggedTemplateLiteral(["<section class=\\"col s12 m6 l4\\" data-columnId=", ">\\n        <header>\\n          <h5>", "<i class=\\"material-icons remove-column red-text text-darken-3\\" id=\\"", "\\">delete</i></h5>\\n          \\n          <span>Add a new To Do</span>\\n\\n          <button data-target=\\"modal1\\" data-columnId=", " class=\\"btn modalOpener blue-grey add-", "\\">Modal</button>\\n        </header>\\n        <ul class=\\"content js-sortable sortable\\">\\n          ", "\\n        </ul>\\n    </section>"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Board_templateObject() {\n  var data = Board_taggedTemplateLiteral(["<li data-postId=", " draggable=\\"true\\">\\n\\n      <p>id = ", "</p>\\n      <p>", "</p>\\n      <p>", "</p>\\n      <p class=\\"date\\">", "</p>\\n      <p class=\\"date\\">", "</p>\\n      <span><i class=\\"material-icons remove-post red-text text-darken-3\\" id=", ">delete</i></span>\\n      <p>\\n        <a class=\\"waves-effect waves-light btn-small buttonUpdatePost\\" id=", ">Edit post</a>\\n      </p>\\n    </li>"]);\n\n  Board_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Board_taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction Board_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Board_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Board_createClass(Constructor, protoProps, staticProps) { if (protoProps) Board_defineProperties(Constructor.prototype, protoProps); if (staticProps) Board_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Board_possibleConstructorReturn(self, call) { if (call && (Board_typeof(call) === "object" || typeof call === "function")) { return call; } return Board_assertThisInitialized(self); }\n\nfunction Board_getPrototypeOf(o) { Board_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Board_getPrototypeOf(o); }\n\nfunction Board_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Board_setPrototypeOf(subClass, superClass); }\n\nfunction Board_setPrototypeOf(o, p) { Board_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Board_setPrototypeOf(o, p); }\n\nfunction Board_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Board_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n //import Materialize from \'materialize-css\';\n\nvar Board_Board =\n/*#__PURE__*/\nfunction (_Component) {\n  Board_inherits(Board, _Component);\n\n  function Board(data) {\n    var _this;\n\n    Board_classCallCheck(this, Board);\n\n    _this = Board_possibleConstructorReturn(this, Board_getPrototypeOf(Board).call(this, data));\n\n    Board_defineProperty(Board_assertThisInitialized(Board_assertThisInitialized(_this)), "eventMap", {\n      \'click @@ .new-section a i\': function clickNewSectionAI() {\n        var newColumn = {\n          name: "column",\n          id: Math.floor(Math.random() * 16 * 16 * 16 * 16 * 16 * 16).toString(16),\n          items: []\n        };\n        newColumn.name = "".concat(newColumn.name, "-").concat(newColumn.id); // show loader\n\n        createColumn(newColumn).then(function () {\n          // hide loader\n          _this.model.columns.push(newColumn);\n\n          console.log(_this.model.columns);\n        }).catch(function (e) {\n          // hide loader\n          console.log(e);\n        });\n      },\n      \'click @@ .remove-column\': function clickRemoveColumn(_ref) {\n        var target = _ref.target;\n        var columnId = target.id;\n        console.log(columnId);\n        removeColumn(columnId).then(function () {\n          _this.model.columns = _this.model.columns.filter(function (_ref2) {\n            var id = _ref2.id;\n            return id !== columnId;\n          });\n        }).catch(function (e) {\n          console.log(e);\n        });\n      },\n      // ====== REMOVE POST ====== //\n      \'click @@ .remove-post\': function clickRemovePost(_ref3) {\n        var target = _ref3.target;\n        var currentPostId = target.id;\n        console.log("currentPostId = " + currentPostId);\n        var currentColumnId = target.closest(\'section\').dataset.columnid;\n        console.log("currentColumnId = " + currentColumnId); //postTarget.parentNode.parentNode.remove();\n\n        removePost(currentPostId, currentColumnId).then(function () {\n          var currentColumn = _this.model.columns.find(function (_ref4) {\n            var id = _ref4.id;\n            return id === currentColumnId;\n          });\n\n          currentColumn.items = currentColumn.items.filter(function (_ref5) {\n            var id = _ref5.id;\n            return id !== currentPostId;\n          });\n        }).catch(function (e) {\n          console.log(e);\n        });\n      },\n      // ====== UPDATE POST ====== //\n      \'click @@ .buttonUpdatePost\': function clickButtonUpdatePost(_ref6) {\n        var target = _ref6.target;\n        _this.currentColumnId = target.closest(\'section\').dataset.columnid;\n        var currentPostId = target.closest(\'li\').dataset.postid;\n\n        var post = _this.getPost(_this.currentColumnId, currentPostId);\n\n        _this.openPostModal(post);\n      },\n      \'click @@ .modalOpener\': function clickModalOpener(event) {\n        _this.currentColumnId = event.target.dataset.columnid;\n        document.querySelector(\'#buttonCreatePost\').textContent = \'create\';\n        document.querySelector(\'.modal-content h4\').textContent = \'Creare a new post\';\n\n        _this.openPostModal({});\n      },\n      \'click @@ #buttonCreatePost\': function clickButtonCreatePost() {\n        console.log(document.querySelectorAll(\'#text\'));\n        _this.postModalData.title = document.querySelector(\'#title\').value;\n        _this.postModalData.text = document.querySelector(\'#text\').value;\n        _this.postModalData.date = _this.formatDate(new Date());\n        _this.postModalData.time = ("0" + new Date().getHours()).slice(-2) + ":" + ("0" + new Date().getMinutes()).slice(-2);\n        console.log(_this.postModalData.title, _this.postModalData.text, document.querySelector(\'#text\').value); // ============= validate text, title, etc.\n\n        var escapeHtml = function escapeHtml(text) {\n          var map = {\n            \'&\': \'&amp;\',\n            \'<\': \'&lt;\',\n            \'>\': \'&gt;\',\n            \'"\': \'&quot;\',\n            \'\\\'\': \'&#039;\'\n          };\n          return text.replace(/[&<>"\']/g, function (m) {\n            return map[m];\n          });\n        };\n\n        _this.postModalData.title = escapeHtml(_this.postModalData.title);\n        _this.postModalData.text = escapeHtml(_this.postModalData.text); //=========== checking for filling title\n\n        if (_this.postModalData) {\n          if (_this.postModalData.id) {\n            updatePost(_this.postModalData, _this.currentColumnId).then(function () {\n              var column = _this.model.columns.find(function (columnData) {\n                return columnData.id === _this.currentColumnId;\n              });\n\n              column.items = column.items.map(function (item) {\n                if (item.id === _this.postModalData.id) {\n                  return _this.postModalData;\n                } else {\n                  return item;\n                }\n              }); // this.model.columns\n            }).catch(function (e) {\n              // hide loader\n              console.log(e);\n            });\n          } else {\n            _this.postModalData.id = _this.postModalData.id || Math.floor(Math.random() * 16 * 16 * 16 * 16 * 16 * 16).toString(16);\n            createPost(_this.postModalData, _this.currentColumnId).then(function () {\n              // hide loader\n              _this.model.columns.forEach(function (columnData) {\n                if (columnData.id === _this.currentColumnId) {\n                  columnData.items.push(_this.postModalData);\n                }\n              });\n            }).catch(function (e) {\n              // hide loader\n              console.log(e);\n            });\n          }\n        }\n      }\n    });\n\n    Board_defineProperty(Board_assertThisInitialized(Board_assertThisInitialized(_this)), "createPost", function (_ref7) {\n      var id = _ref7.id,\n          title = _ref7.title,\n          text = _ref7.text,\n          date = _ref7.date,\n          time = _ref7.time;\n      return template(Board_templateObject(), id, id, title, text, date, time, id, id);\n    });\n\n    Board_defineProperty(Board_assertThisInitialized(Board_assertThisInitialized(_this)), "createColumn", function (_ref8) {\n      var name = _ref8.name,\n          items = _ref8.items,\n          id = _ref8.id;\n      return template(_templateObject2(), id, name, id, id, id, items.map(_this.createPost).join(\'\'));\n    });\n\n    Board_defineProperty(Board_assertThisInitialized(Board_assertThisInitialized(_this)), "render", function () {\n      return template(_templateObject3(), _this.model.columns.map(_this.createColumn).join(\'\'));\n    });\n\n    return _this;\n  }\n\n  Board_createClass(Board, [{\n    key: "formatDate",\n    value: function formatDate(date) {\n      var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      return day + \' \' + monthNames[monthIndex] + \' \' + year;\n    }\n  }, {\n    key: "openPostModal",\n    value: function openPostModal(data) {\n      console.log(data);\n      this.postModalData = data;\n      this.modal = M.Modal.init(document.querySelector(\'.modal\'));\n      this.modal.open();\n      document.querySelector(\'#title\').focus();\n      document.querySelector(\'#title\').value = data.title || \'\';\n      document.querySelector(\'#text\').value = data.text || \'\';\n    }\n  }, {\n    key: "getPost",\n    value: function getPost(columnId, postId) {\n      console.log(\'looking for post =>\', columnId, postId);\n      var column = this.model.columns.find(function (c) {\n        return c.id === columnId;\n      });\n      console.log(column);\n\n      if (column) {\n        document.querySelector(\'#buttonCreatePost\').textContent = \'update\';\n        document.querySelector(\'.modal-content h4\').textContent = \'Update this post\';\n        return column.items.find(function (i) {\n          return i.id === postId;\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Board;\n}(Component_Component);\n\n\n// CONCATENATED MODULE: ./src/app.js\nfunction app_templateObject() {\n  var data = app_taggedTemplateLiteral(["\\n    <header class=\'header\'>\\n      <nav>\\n        <div class=\\"nav-wrapper container\\">\\n          <a class=\\"brand-logo\\">Prello</a>\\n          <a href=\\"#\\" data-target=\\"mobile-demo\\" class=\\"sidenav-trigger\\"><i class=\\"material-icons\\">menu</i></a>\\n          <ul id=\\"nav-mobile\\" class=\\"right hide-on-med-and-down\\">\\n            <li><a href=\'#main\'>main</a></li>\\n            <li><a href=\'#calendar\'>calendar</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n      <ul class=\\"sidenav\\" id=\\"mobile-demo\\">\\n        <li><a href=\'#main\'>main</a></li>\\n        <li><a href=\'#calendar\'>calendar</a></li>\\n      </ul>\\n    </header>\\n    <div id=\\"outlet\\"></div>\\n    "]);\n\n  app_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction app_taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction app_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction app_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction app_createClass(Constructor, protoProps, staticProps) { if (protoProps) app_defineProperties(Constructor.prototype, protoProps); if (staticProps) app_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction app_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar app_App =\n/*#__PURE__*/\nfunction () {\n  function App() {\n    var _this = this;\n\n    var mainElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.querySelector(\'body\');\n\n    app_classCallCheck(this, App);\n\n    app_defineProperty(this, "template", template(app_templateObject()));\n\n    var calendar = new Calendar_Calendar({\n      name: \'Calendar\'\n    });\n    var board = new Board_Board({\n      columns: []\n    });\n    var outlet = document.querySelector(\'#outlet\');\n    this.eventBus = new EventBus();\n\n    if (window.location.hash === \'#main\') {\n      console.log(\'window.location.hash === #main\');\n    }\n\n    this.eventBus.subscribe(\'routeChanged\', function (page) {\n      switch (page) {\n        case \'main\':\n          calendar.isMounted && calendar.unmount();\n          board.mountTo(document.querySelector(\'#outlet\'));\n          break;\n\n        case \'calendar\':\n          board.isMounted && board.unmount();\n          calendar.mountTo(document.querySelector(\'#outlet\'));\n          break;\n\n        default:\n          break;\n      }\n    });\n    this.router = new Router({\n      \'#main\': function main() {\n        _this.eventBus.publish(\'routeChanged\', \'main\');\n      },\n      \'#calendar\': function calendar() {\n        _this.eventBus.publish(\'routeChanged\', \'calendar\');\n      }\n    });\n    this.mainElement = mainElement;\n    getColumns().then(function (columns) {\n      console.log(\'got data from server\', columns);\n      board.model.columns = columns;\n\n      _this.eventBus.publish(\'routeChanged\', \'main\');\n    }).catch(function (e) {\n      console.log(\'Error!\', e);\n    });\n  }\n\n  app_createClass(App, [{\n    key: "render",\n    value: function render() {\n      this.mainElement.innerHTML = this.template;\n      document.querySelector(\'.sidenav-trigger\').addEventListener(\'click\', function () {\n        this.sidenav = M.Sidenav.init(document.querySelector(\'.sidenav\'));\n        this.sidenav.open();\n      });\n    }\n  }]);\n\n  return App;\n}();\n\n\n// CONCATENATED MODULE: ./index.js\n\n\nwindow.onload = function () {\n  // const el = document.querySelector(\'#main\');\n  new app_App().render();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')}]);